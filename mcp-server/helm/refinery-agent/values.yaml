# Default values for refinery-agent
replicaCount: 2

image:
  repository: deepline/refinery-agent
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/metrics"
  prometheus.io/port: "8005"

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8005
  targetPort: 8005

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: refinery-agent.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 512Mi

livenessProbe:
  httpGet:
    path: /health
    port: 8005
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: 8005
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - refinery-agent
        topologyKey: kubernetes.io/hostname

# Application configuration
config:
  environment: production
  logLevel: INFO
  
  # Redis configuration
  redis:
    url: "redis://redis-service:6379"
    database: 0
    maxConnections: 20
    
  # MongoDB configuration  
  mongodb:
    url: "mongodb://mongodb-service:27017"
    database: deepline
    
  # Performance settings
  performance:
    maxDatasetSize: 1000000
    sampleSize: 10000
    cacheEnabled: true
    cacheTtl: 3600
    maxWorkers: 3
    timeout: 60

# ConfigMap data
configMap:
  create: true
  
# Secret for sensitive data
secret:
  create: true
  data: {}

# Service Monitor for Prometheus
serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
  labels: {}

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1